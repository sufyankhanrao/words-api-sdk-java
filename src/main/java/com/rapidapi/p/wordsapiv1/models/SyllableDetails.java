/*
 * WordsAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.rapidapi.p.wordsapiv1.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.rapidapi.p.wordsapiv1.internal.OptionalNullable;
import java.util.List;

/**
 * This is a model class for SyllableDetails type.
 */
public class SyllableDetails {
    private OptionalNullable<Integer> count;
    private OptionalNullable<List<String>> list;

    /**
     * Default constructor.
     */
    public SyllableDetails() {
    }

    /**
     * Initialization constructor.
     * @param  count  Integer value for count.
     * @param  list  List of String value for list.
     */
    public SyllableDetails(
            Integer count,
            List<String> list) {
        this.count = OptionalNullable.of(count);
        this.list = OptionalNullable.of(list);
    }

    /**
     * Internal initialization constructor.
     */
    protected SyllableDetails(OptionalNullable<Integer> count,
            OptionalNullable<List<String>> list) {
        this.count = count;
        this.list = list;
    }

    /**
     * Internal Getter for Count.
     * The count of syllables.
     * @return Returns the Internal Integer
     */
    @JsonGetter("count")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCount() {
        return this.count;
    }

    /**
     * Getter for Count.
     * The count of syllables.
     * @return Returns the Integer
     */
    public Integer getCount() {
        return OptionalNullable.getFrom(count);
    }

    /**
     * Setter for Count.
     * The count of syllables.
     * @param count Value for Integer
     */
    @JsonSetter("count")
    public void setCount(Integer count) {
        this.count = OptionalNullable.of(count);
    }

    /**
     * UnSetter for Count.
     * The count of syllables.
     */
    public void unsetCount() {
        count = null;
    }

    /**
     * Internal Getter for List.
     * The list of syllables.
     * @return Returns the Internal List of String
     */
    @JsonGetter("list")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<String>> internalGetList() {
        return this.list;
    }

    /**
     * Getter for List.
     * The list of syllables.
     * @return Returns the List of String
     */
    public List<String> getList() {
        return OptionalNullable.getFrom(list);
    }

    /**
     * Setter for List.
     * The list of syllables.
     * @param list Value for List of String
     */
    @JsonSetter("list")
    public void setList(List<String> list) {
        this.list = OptionalNullable.of(list);
    }

    /**
     * UnSetter for List.
     * The list of syllables.
     */
    public void unsetList() {
        list = null;
    }

    /**
     * Converts this SyllableDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SyllableDetails [" + "count=" + count + ", list=" + list + "]";
    }

    /**
     * Builds a new {@link SyllableDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SyllableDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.count = internalGetCount();
        builder.list = internalGetList();
        return builder;
    }

    /**
     * Class to build instances of {@link SyllableDetails}.
     */
    public static class Builder {
        private OptionalNullable<Integer> count;
        private OptionalNullable<List<String>> list;



        /**
         * Setter for count.
         * @param  count  Integer value for count.
         * @return Builder
         */
        public Builder count(Integer count) {
            this.count = OptionalNullable.of(count);
            return this;
        }

        /**
         * UnSetter for count.
         * @return Builder
         */
        public Builder unsetCount() {
            count = null;
            return this;
        }

        /**
         * Setter for list.
         * @param  list  List of String value for list.
         * @return Builder
         */
        public Builder list(List<String> list) {
            this.list = OptionalNullable.of(list);
            return this;
        }

        /**
         * UnSetter for list.
         * @return Builder
         */
        public Builder unsetList() {
            list = null;
            return this;
        }

        /**
         * Builds a new {@link SyllableDetails} object using the set fields.
         * @return {@link SyllableDetails}
         */
        public SyllableDetails build() {
            return new SyllableDetails(count, list);
        }
    }
}
